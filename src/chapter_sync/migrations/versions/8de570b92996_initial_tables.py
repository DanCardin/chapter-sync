"""Initial tables.

Revision ID: 8de570b92996
Revises: 
Create Date: 2024-03-08 06:40:32.175828

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8de570b92996'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('series',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('cover_url', sa.Text(), nullable=True),
    sa.Column('settings', sa.JSON(none_as_null=True), nullable=True),
    sa.Column('last_built_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ebook', sa.LargeBinary(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('series_pkey')),
    sa.UniqueConstraint('name', name=op.f('series_name_key'))
    )
    op.create_table('subscriber',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('subscriber_pkey')),
    sa.UniqueConstraint('name', name=op.f('subscriber_name_key'))
    )
    op.create_table('chapter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('series_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('ebook', sa.LargeBinary(), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], name=op.f('chapter_series_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('chapter_pkey')),
    sa.UniqueConstraint('series_id', 'number', name=op.f('chapter_series_id_number_key'))
    )
    op.create_table('series_subscriber',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('series_id', sa.Integer(), nullable=False),
    sa.Column('subscriber_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], name=op.f('series_subscriber_series_id_fkey')),
    sa.ForeignKeyConstraint(['subscriber_id'], ['subscriber.id'], name=op.f('series_subscriber_subscriber_id_fkey')),
    sa.PrimaryKeyConstraint('id', 'series_id', 'subscriber_id', name=op.f('series_subscriber_pkey')),
    sa.UniqueConstraint('series_id', 'subscriber_id', name=op.f('series_subscriber_series_id_subscriber_id_key'))
    )
    op.create_table('chapter_send_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chapter_id', sa.Integer(), nullable=False),
    sa.Column('series_subscriber_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['chapter_id'], ['chapter.id'], name=op.f('chapter_send_event_chapter_id_fkey')),
    sa.ForeignKeyConstraint(['series_subscriber_id'], ['series_subscriber.id'], name=op.f('chapter_send_event_series_subscriber_id_fkey')),
    sa.PrimaryKeyConstraint('id', 'chapter_id', 'series_subscriber_id', name=op.f('chapter_send_event_pkey')),
    sa.UniqueConstraint('chapter_id', 'series_subscriber_id', name=op.f('chapter_send_event_chapter_id_series_subscriber_id_key'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('chapter_send_event')
    op.drop_table('series_subscriber')
    op.drop_table('chapter')
    op.drop_table('subscriber')
    op.drop_table('series')
    # ### end Alembic commands ###
